---
- name: Erstelle einen neuen Ubuntu 24.04 Container auf Proxmox
  hosts: localhost
  gather_facts: true  # Fakten sammeln
  vars:
    proxmox_host: "proxmox.example.com"  # Ersetze mit deinem Proxmox-Host
    proxmox_user: "root"  # Ersetze mit deinem Benutzer
    proxmox_password: "dein_passwort"  # Ersetze mit deinem Passwort
    template_id: 101  # ID des Ubuntu 24.04 Templates (ändern, wenn notwendig)
    min_container_id: 100  # Die minimale Container-ID, die verwendet werden soll
    max_container_id: 9999  # Die maximale Container-ID, die verwendet werden soll

  tasks:
    - name: Überprüfen, welche Container-IDs bereits existieren
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/{{ proxmox_host }}/lxc"
        method: GET
        user: "{{ proxmox_user }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
      register: container_list

    - name: Ausgabe der Antwort der Proxmox-API
      debug:
        msg: "{{ container_list }}"

    - name: Erstellen einer Liste aller existierenden Container-IDs
      set_fact:
        existing_ids: "{{ container_list.json.data | map(attribute='vmid') | list }}"

    - name: Finde die nächstfreie Container-ID
      set_fact:
        container_id: "{{ (min_container_id..max_container_id) | selectattr('item', 'not in', existing_ids) | first }}"

    - name: Generiere zufälligen Container-Namen
      set_fact:
        container_name: "ubuntu-container-{{ lookup('password', '/dev/null length=8 chars=letters,digits') }}"

    - name: Generiere zufälliges Passwort für den Container
      set_fact:
        container_password: "{{ lookup('password', '/dev/null length=16 chars=letters,digits') }}"

    - name: Container auf Proxmox erstellen
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/{{ proxmox_host }}/lxc"
        method: POST
        user: "{{ proxmox_user }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
        body: |
          {
            "vmid": "{{ container_id }}",
            "hostname": "{{ container_name }}",
            "ostemplate": "local:vztmpl/{{ template_id }}-template.tar.gz",
            "rootfs": "local-lvm:8",
            "password": "{{ container_password }}",
            "cores": 2,
            "memory": 1024,
            "swap": 1024,
            "net0": "name=eth0,bridge=vmbr0,ip=dhcp,tag=10"
          }
        body_format: json
      register: create_container

    - name: Ausgabe des Container-Namens und Passworts
      debug:
        msg: "Container erstellt mit ID: {{ container_id }}, Name: {{ container_name }}, Passwort: {{ container_password }}"
