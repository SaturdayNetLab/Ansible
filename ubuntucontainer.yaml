---
- name: Erstelle einen neuen Ubuntu 24.04 Container auf Proxmox
  hosts: localhost
  gather_facts: true  # Fakten sammeln
  vars:
    proxmox_host: "proxmox.example.com"  # Ersetze mit deinem Proxmox-Host
    proxmox_user: "root"  # Ersetze mit deinem Benutzer
    proxmox_password: "dein_passwort"  # Ersetze mit deinem Passwort
    template_id: 101  # ID des Ubuntu 24.04 Templates (ändern, wenn notwendig)

  tasks:
    - name: Generiere eine zufällige Container-ID
      set_fact:
        container_id: "{{ 100 + (random(1, 10000) | int) }}"  # Verwende Jinja2 random()

    - name: Generiere zufälligen Container-Namen
      set_fact:
        container_name: "ubuntu-container-{{ lookup('password', '/dev/null length=8 chars=letters,digits') }}"

    - name: Generiere zufälliges Passwort für den Container
      set_fact:
        container_password: "{{ lookup('password', '/dev/null length=16 chars=letters,digits') }}"

    - name: Überprüfen, ob die Container-ID bereits existiert
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/{{ proxmox_host }}/lxc"
        method: GET
        user: "{{ proxmox_user }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
      register: container_list

    - name: Ausgabe der Antwort der Proxmox-API
      debug:
        msg: "{{ container_list }}"

    - name: Sicherstellen, dass die ID einzigartig ist
      set_fact:
        container_id: "{{ container_id + 1 }}"
      when: container_list.json.data is defined and container_list.json.data | selectattr('vmid', 'equalto', container_id) | list | length > 0

    - name: Container auf Proxmox erstellen
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/{{ proxmox_host }}/lxc"
        method: POST
        user: "{{ proxmox_user }}"
        password: "{{ proxmox_password }}"
        validate_certs: no
        body: |
          {
            "vmid": "{{ container_id }}",
            "hostname": "{{ container_name }}",
            "ostemplate": "local:vztmpl/{{ template_id }}-template.tar.gz",
            "rootfs": "local-lvm:8",
            "password": "{{ container_password }}",
            "cores": 2,
            "memory": 1024,
            "swap": 1024,
            "net0": "name=eth0,bridge=vmbr0,ip=dhcp,tag=10"
          }
        body_format: json
      register: create_container

    - name: Ausgabe des Container-Namens und Passworts
      debug:
        msg: "Container erstellt mit ID: {{ container_id }}, Name: {{ container_name }}, Passwort: {{ container_password }}"
