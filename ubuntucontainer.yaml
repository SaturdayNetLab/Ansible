---
- name: Create and configure a new Proxmox container using SSH and Semaphore credentials
  hosts: proxmox
  gather_facts: no
  vars:
    container_name: "ubuntu-container"
    template: "local:vztmpl/ubuntu-24.04-standard_24.04-1_amd64.tar.gz"  # Ubuntu 24.04 Template
    container_memory: 1024
    container_cores: 2
    network_bridge: "vmbr0"
    proxmox_user: "root"  # SSH Benutzer auf Proxmox
    proxmox_host: "pve"  # Hostname deines Proxmox-Hosts (pve)

  tasks:
    - name: Generate a random password
      ansible.builtin.shell: openssl rand -base64 16
      register: generated_password

    - name: Fetch the list of existing VMIDs from Proxmox via SSH
      ansible.builtin.shell: ssh {{ ansible_ssh_user }}@{{ proxmox_host }} "pvesh get /cluster/resources --type vm | jq -r '.[].vmid'"
      register: existing_vmids
      changed_when: false

    - name: Find the next available VMID
      ansible.builtin.set_fact:
        new_vmid: "{{ (existing_vmids.stdout_lines | map('int') | sort | last | default(99)) + 1 }}"

    - name: Create a new Proxmox container with DHCP via SSH
      ansible.builtin.shell: |
        ssh {{ ansible_ssh_user }}@{{ proxmox_host }} "pct create {{ new_vmid }} {{ template }} -hostname {{ container_name }} -memory {{ container_memory }} -cores {{ container_cores }} -net0 name=eth0,bridge={{ network_bridge }},ip=dhcp -rootfs local-lvm:8"
      register: container_creation_output

    - name: Start the container
      ansible.builtin.shell: |
        ssh {{ ansible_ssh_user }}@{{ proxmox_host }} "pct start {{ new_vmid }}"
      register: container_start_output

    - name: Update the container and install required packages via SSH
      ansible.builtin.shell: |
        ssh {{ ansible_ssh_user }}@{{ proxmox_host }} "pct exec {{ new_vmid }} -- bash -c 'apt-get update && apt-get upgrade -y && apt-get install -y fail2ban sudo curl'"
      register: container_update_output

    - name: Reboot the container if necessary via SSH
      ansible.builtin.shell: |
        ssh {{ ansible_ssh_user }}@{{ proxmox_host }} "pct exec {{ new_vmid }} -- bash -c 'if [ -f /var/run/reboot-required ]; then shutdown -r now; fi'"
      register: container_reboot_output

    - name: Display the new container details
      ansible.builtin.debug:
        msg: |
          Container created successfully!
          Hostname: {{ container_name }}
          VMID: {{ new_vmid }}
          Root Password: {{ generated_password.stdout }}
